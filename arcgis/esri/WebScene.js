// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.1/esri/copyright.txt for details.
//>>built
require({cache:{"esri/core/accessorSupport/originUtils":function(){define(["require","exports","../MultiOriginJSONSupport"],function(l,p,n){p.updateOrigins=function(a){a&&a.writtenProperties&&a.writtenProperties.forEach(function(a){var b=a.target;a.newOrigin&&(a.oldOrigin!==a.newOrigin&&b.isInstanceOf(n))&&b.updateOrigin(a.propName,a.newOrigin)})}})},"esri/geometry/support/castUtils":function(){define(["../Point","../Polyline","../Polygon","../Multipoint","../Extent"],function(l,p,n,a,f){return{cast:function(b){return!b||
b.declaredClass?b||null:void 0!==b.x&&void 0!==b.y?new l(b):void 0!==b.paths?new p(b):void 0!==b.rings?new n(b):void 0!==b.points?new a(b):void 0!==b.xmin&&void 0!==b.ymin&&void 0!==b.xmax&&void 0!==b.ymax?new f(b):null}}})},"esri/webscene/Presentation":function(){define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/JSONSupport ../core/Collection ../core/collectionUtils ../core/accessorSupport/decorators ./Slide".split(" "),function(l,p,n,a,f,b,k,
e,c){var r=b.ofType(c);return function(b){function f(a){b.call(this,a);this.slides=new r}n(f,b);Object.defineProperty(f.prototype,"slides",{set:function(a){this._set("slides",k.referenceSetter(a,this._get("slides"),r))},enumerable:!0,configurable:!0});f.prototype.clone=function(){return new this.constructor({slides:this.slides.clone()})};f.prototype.toJSON=function(){return this.inherited(arguments)};f.sanitizeJSON=function(a){return{slides:void 0!==a.slides&&Array.isArray(a.slides)?a.slides.filter(function(a){return a&&
!!a.viewpoint}).map(function(a){return c.sanitizeJSON(a)}):[]}};a([e.property({type:r,json:{writable:!0}}),e.cast(k.castForReferenceSetter)],f.prototype,"slides",null);return f=a([e.subclass("esri.webscene.Presentation")],f)}(e.declared(f))})},"esri/webscene/Slide":function(){define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/accessorSupport/decorators ../Viewpoint ../Basemap ../support/basemapUtils ../core/JSONSupport ../core/lang ../core/Logger ../core/Collection ../core/collectionUtils ../core/promiseUtils ./Environment ./Lighting ./support/Description ./support/Title ./support/Thumbnail dojo/_base/lang dojo/promise/all ../views/3d/lib/glMatrix".split(" "),
function(l,p,n,a,f,b,k,e,c,r,G,s,H,u,w,I,B,C,z,A,J,K){var v=0,D=function(b){function c(){b.apply(this,arguments);this.id=""}n(c,b);c.prototype.clone=function(){return new c({id:this.id})};a([f.property({type:String,json:{writable:!0}})],c.prototype,"id",void 0);return c=a([f.subclass()],c)}(f.declared(c)),x=s.ofType(D),E=G.getLogger("esri.webscene.Slide");return function(c){function h(a){c.call(this,a);this._currentAnimation=null;this.id=Date.now().toString(16)+"-slide-"+v++;this.title=new C.default;
this.description=new B.default;this.thumbnail=new z.default;this.basemap=this.viewpoint=null;this.environment=new w;this.visibleLayers=new x}n(h,c);h.prototype.readBasemap=function(a,c){return!c.baseMap?null:k.fromJSON(c.baseMap)};h.prototype.castBasemap=function(a){return e.ensureType(a)};Object.defineProperty(h.prototype,"visibleLayers",{set:function(a){this._set("visibleLayers",H.referenceSetter(a,this._get("visibleLayers"),x))},enumerable:!0,configurable:!0});h.prototype.castVisibleLayers=function(a){return!a||
"function"!==typeof a.map?a:a.map(function(a){if("string"===typeof a)return{id:a};if(a.id)return{id:a.id};E.warn('Invalid visible layer, expected { id }, Layer or "id"');return a})};h.prototype.clone=function(){return new this.constructor({id:this.id,title:this.title.clone(),thumbnail:this.thumbnail.clone(),description:this.description&&this.description.clone()||null,viewpoint:this.viewpoint&&this.viewpoint.clone()||null,basemap:this.basemap&&this.basemap.clone()||null,visibleLayers:this.visibleLayers.clone(),
environment:this.environment&&this.environment.clone()||null})};h.prototype._updateVisibleLayersFrom=function(a){var c=this,b=[];return u.eachAlways(this._allLayers(a.map).map(function(c){return a.whenLayerView(c).then(function(a){a.visible&&b.push(new D({id:a.layer.id}))})}).toArray()).then(function(){c.visibleLayers.removeAll();c.visibleLayers.addMany(b)})};h.prototype.updateFrom=function(a,c){var b=this;c=A.mixin({screenshot:A.mixin({format:"jpeg",quality:80,width:120,height:75},c&&c.screenshot)},
c);return this._updateVisibleLayersFrom(a).then(function(){b.viewpoint=a.viewpoint.clone();b.environment.lighting=I.prototype.clone.apply(a.environment.lighting);b.basemap=a.map.basemap&&a.map.basemap.clone()||null;return a.takeScreenshot(c.screenshot)}).then(function(a){b.thumbnail=new z.default({url:a.dataURL});return b})};h.prototype.applyTo=function(a,c){var b=this,e=A.mixin({animate:!0},c);return this._applyBasemap(a).then(function(){return J([b._applyViewpoint(a,e),b._applyLayerVisibility(a,
e)])}).then(function(){return b})};h.prototype._applyBasemap=function(a){var c=this;return this.basemap?this.basemap.load().always(function(){a.map.basemap=e.clonePreservingTiledLayers(c.basemap,a.map.basemap)}):u.resolve()};h.prototype._allLayers=function(a){var c=new s;this._collectLayers(a,c);this._collectLayers(a.ground,c);return c};h.prototype._collectLayers=function(a,c){var b=this;a.layers.forEach(function(a){c.add(a);a.layers&&b._collectLayers(a,c)})};h.prototype._applyLayerVisibility=function(a,
c){var b=this;if(this.visibleLayers){var e=this._allLayers(a.map);if(c.applyToLayerViews)return u.eachAlways(e.map(function(c){return a.whenLayerView(c).then(function(a){a.visible=b.visibleLayers.some(function(c){return c.id===a.layer.id})})}).toArray());e.forEach(function(a){return a.visible=b.visibleLayers.some(function(c){return c.id===a.id})});return u.resolve()}};h.prototype._applyViewpoint=function(a,c){if(this.viewpoint){this.viewpoint.camera.fov=a.camera.fov;if(c.animate){if(this.get("environment.lighting.date"))return this._animateToLighting(a).then(function(){});
a.environment.lighting=this.environment.lighting.clone();return a.goTo(this.viewpoint).then(function(){})}a.viewpoint=this.viewpoint;a.environment.lighting=this.environment.lighting.clone()}return u.resolve()};h.prototype._animateToLighting=function(a){var c=this,b;"global"===a.viewingMode&&(b=this._animateLightingWithCamera(a));this._currentAnimation&&(this._currentAnimation.stop(),this._currentAnimation=null);a.environment.lighting.cameraTrackingEnabled=!1;a.environment.lighting.directShadowsEnabled=
this.environment.lighting.directShadowsEnabled;null!=this.environment.lighting.displayUTCOffset&&(a.environment.lighting.displayUTCOffset=this.environment.lighting.displayUTCOffset);this._currentAnimation=a.goTo(this.viewpoint);this._currentAnimation.then(function(e){b&&b.remove();c._currentAnimation===e&&(a.environment.lighting.cameraTrackingEnabled=!0);"finished"===e.state&&(a.environment.lighting=c.environment.lighting.clone())});return this._currentAnimation};h.prototype._getTime=function(a){var c=
a.getTime();a=3600*a.getUTCHours()+60*a.getUTCMinutes()+a.getUTCSeconds();return[c,a]};h.prototype._setTime=function(a,c,b){a.setTime(c);a.setUTCHours(b/3600);a.setUTCMinutes(b%3600/60);a.setUTCSeconds(b%3600%60);return a};h.prototype._animateLightingWithCamera=function(a){var c=this,b=K.vec3d,e=this._getTime(new Date(a.environment.lighting.date.toString())),f=e[0],k=e[1],e=this._getTime(this.environment.lighting.date),d=e[0],Q=e[1],g=a.renderCoordsHelper,O=[0,0,0];g.toRenderCoords(a.camera.position,
O);var P=[0,0,0];g.toRenderCoords(this.viewpoint.camera.position,P);var L=[0,0,0],q=new Date;return a.watch("camera",function(e){g.toRenderCoords(e.position,L);e=b.dist2(O,L);var h=b.dist2(P,L),r=0;0!==e+h&&(r=e/(e+h));a.environment.lighting.date=c._setTime(q,f+(d-f)*r,k+(Q-k)*r)})};h.createFrom=function(a,c){return(new this).updateFrom(a,c)};h.sanitizeJSON=function(a){var c;c=void 0!==a.visibleLayers&&Array.isArray(a.visibleLayers)?r.clone(a.visibleLayers):[];c={id:a.id||"",title:a.title||{text:""},
thumbnail:a.thumbnail||{url:""},viewpoint:a.viewpoint,baseMap:a.baseMap,visibleLayers:c};void 0!==a.description&&(c.description=a.description);void 0!==a.environment&&(c.environment=w.sanitizeJSON(a.environment));return c};a([f.property({json:{writable:!0}})],h.prototype,"id",void 0);a([f.property({type:C.default,json:{writable:!0}})],h.prototype,"title",void 0);a([f.property({type:B.default,json:{writable:!0}})],h.prototype,"description",void 0);a([f.property({type:z.default,json:{writable:!0}})],
h.prototype,"thumbnail",void 0);a([f.property({type:b,json:{writable:!0}})],h.prototype,"viewpoint",void 0);a([f.property({json:{writeTo:"baseMap"}})],h.prototype,"basemap",void 0);a([f.read("basemap",["baseMap"])],h.prototype,"readBasemap",null);a([f.cast("basemap")],h.prototype,"castBasemap",null);a([f.property({type:x,json:{writable:!0}})],h.prototype,"visibleLayers",null);a([f.cast("visibleLayers")],h.prototype,"castVisibleLayers",null);a([f.property({type:w,json:{writable:!0}})],h.prototype,
"environment",void 0);return h=a([f.subclass("esri.webscene.Slide")],h)}(f.declared(c))})},"esri/webscene/Environment":function(){define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/JSONSupport ../core/accessorSupport/decorators ./Lighting".split(" "),function(l,p,n,a,f,b,k){return function(e){function c(a){e.call(this,a);this.lighting=new k}n(c,e);c.prototype.clone=function(){return new c({lighting:k.prototype.clone.call(this.lighting)})};c.sanitizeJSON=
function(a){return{lighting:a.lighting?k.sanitizeJSON(a.lighting):(new k).toJSON()}};a([b.property({type:k,json:{writable:!0}})],c.prototype,"lighting",void 0);return c=a([b.subclass("esri.webscene.Environment")],c)}(b.declared(f))})},"esri/webscene/Lighting":function(){define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../core/JSONSupport ../core/accessorSupport/decorators".split(" "),function(l,p,n,a,f,b){return function(f){function e(a){f.call(this,
a);this.date=null;this.directShadowsEnabled=!1;this.displayUTCOffset=null}n(e,f);e.prototype.readDate=function(a,b){return null!=b.datetime&&new Date(b.datetime)||null};e.prototype.writeDate=function(a,b){null!=a&&(b.datetime=a.getTime())};e.prototype.readDirectShadowsEnabled=function(a,b){return!!b.directShadows};e.prototype.writedirectShadowsEnabled=function(a,b){a&&(b.directShadows=!0)};e.prototype.writeDisplayUTCOffset=function(a,b){null!=a&&(b.displayUTCOffset=a)};e.prototype.clone=function(){return new e({date:null!=
this.date?new Date(this.date.getTime()):null,directShadowsEnabled:this.directShadowsEnabled,displayUTCOffset:null!=this.displayUTCOffset?this.displayUTCOffset:null})};e.sanitizeJSON=function(a){var b={datetime:a.datetime};void 0!==a.directShadows&&(b.directShadows=!!a.directShadows);void 0!==a.displayUTCOffset&&(b.displayUTCOffset=a.displayUTCOffset);return b};a([b.property({type:Date})],e.prototype,"date",void 0);a([b.read("date",["datetime"])],e.prototype,"readDate",null);a([b.write("date")],e.prototype,
"writeDate",null);a([b.property({type:Boolean})],e.prototype,"directShadowsEnabled",void 0);a([b.read("directShadowsEnabled",["directShadows"])],e.prototype,"readDirectShadowsEnabled",null);a([b.write("directShadowsEnabled")],e.prototype,"writedirectShadowsEnabled",null);a([b.property({type:Number,json:{writable:!0}})],e.prototype,"displayUTCOffset",void 0);a([b.write("displayUTCOffset")],e.prototype,"writeDisplayUTCOffset",null);return e=a([b.subclass("esri.webscene.Lighting")],e)}(b.declared(f))})},
"esri/webscene/support/Description":function(){define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/JSONSupport ../../core/accessorSupport/decorators".split(" "),function(l,p,n,a,f,b){l=function(f){function e(){f.apply(this,arguments);this.text=""}n(e,f);e.prototype.clone=function(){return new e({text:this.text})};a([b.property({type:String,json:{writable:!0}})],e.prototype,"text",void 0);return e=a([b.subclass("esri.webscene.support.Description")],
e)}(b.declared(f));Object.defineProperty(p,"__esModule",{value:!0});p.default=l})},"esri/webscene/support/Title":function(){define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/JSONSupport ../../core/accessorSupport/decorators".split(" "),function(l,p,n,a,f,b){l=function(f){function e(){f.apply(this,arguments);this.text=""}n(e,f);e.prototype.clone=function(){return new e({text:this.text})};a([b.property({type:String,json:{writable:!0}})],
e.prototype,"text",void 0);return e=a([b.subclass("esri.webscene.support.Title")],e)}(b.declared(f));Object.defineProperty(p,"__esModule",{value:!0});p.default=l})},"esri/webscene/support/Thumbnail":function(){define("require exports ../../core/tsSupport/declareExtendsHelper ../../core/tsSupport/decorateHelper ../../core/JSONSupport ../../core/accessorSupport/decorators".split(" "),function(l,p,n,a,f,b){l=function(f){function e(){f.apply(this,arguments);this.url=""}n(e,f);e.prototype.clone=function(){return new e({url:this.url})};
a([b.property({type:String,json:{writable:!0}})],e.prototype,"url",void 0);return e=a([b.subclass("esri.webscene.support.Thumbnail")],e)}(b.declared(f));Object.defineProperty(p,"__esModule",{value:!0});p.default=l})},"esri/webscene/InitialViewProperties":function(){define("require exports ../core/tsSupport/declareExtendsHelper ../core/tsSupport/decorateHelper ../Viewpoint ../core/Accessor ../geometry/SpatialReference ./Environment ../core/accessorSupport/decorators".split(" "),function(l,p,n,a,f,
b,k,e,c){return function(b){function l(a){b.call(this,a);this.environment=new e;this.viewpoint=this.spatialReference=null}n(l,b);Object.defineProperty(l.prototype,"viewingMode",{set:function(a){"local"!==a&&"global"!==a||this._set("viewingMode",a)},enumerable:!0,configurable:!0});l.prototype.clone=function(){return new l({environment:this.environment.clone(),spatialReference:this.spatialReference?this.spatialReference.clone():null,viewingMode:this.viewingMode,viewpoint:this.viewpoint?this.viewpoint.clone():
null})};a([c.property({type:e})],l.prototype,"environment",void 0);a([c.property({type:k})],l.prototype,"spatialReference",void 0);a([c.property()],l.prototype,"viewingMode",null);a([c.property({type:f})],l.prototype,"viewpoint",void 0);return l=a([c.subclass("esri.webscene.InitialViewProperties")],l)}(c.declared(b))})},"*noref":1}});
define("require exports ./core/tsSupport/declareExtendsHelper ./core/tsSupport/decorateHelper ./core/tsSupport/paramHelper ./Map ./core/Error ./core/requireUtils ./core/promiseUtils ./core/JSONSupport ./core/Loadable ./core/urlUtils ./core/Logger ./core/accessorSupport/read ./core/accessorSupport/originUtils ./support/groundUtils ./Basemap ./Viewpoint ./kernel ./geometry/support/jsonUtils ./geometry/support/castUtils ./geometry/Geometry ./geometry/SpatialReference ./geometry/support/scaleUtils ./webscene/Presentation ./webscene/InitialViewProperties ./webscene/Environment ./portal/PortalItem ./portal/Portal dojo/_base/lang ./core/accessorSupport/decorators".split(" "),function(l,
p,n,a,f,b,k,e,c,r,G,s,H,u,w,I,B,C,z,A,J,K,v,D,x,E,M,h,F,t,m){var N=H.getLogger("esri.webscene"),y={major:1,minor:4};Object.freeze(y);return function(b){function d(a){b.call(this);this.basemapElevationLayerIds=[];this.clippingArea=null;this.clippingEnabled=!1;this.authoringAppVersion=this.authoringApp=this.resourceInfo=this.portalItem=this.initialViewProperties=this.presentation=this.sourceVersion=null;this._isAuthoringAppVersionSetByUser=this._isAuthoringAppSetByUser=!1}n(d,b);d.prototype.initialize=
function(){if(this.resourceInfo){var a=void 0;try{a=this._validateJSON(this.resourceInfo)}catch(g){this.addResolvingPromise(c.reject(g));return}this.read(a);this.addResolvingPromise(this._validateSpatialReference())}};d.prototype.getDefaults=function(a){return t.mixin(this.inherited(arguments),{presentation:{},initialViewProperties:{}})};d.prototype.readBasemap=function(a,g){if(!g.baseMap)return null;var b=t.mixin({},g.baseMap);delete b.elevationLayers;var c=new B;c.resourceInfo=b;c.read(b,{origin:"web-scene"});
return c};d.prototype.writeBasemap=function(a,g,b){var c=this;a&&(g.baseMap||(g.baseMap={}),a.write(g.baseMap,b),g.baseMap.elevationLayers=[]);this.ground&&(a=this.ground.layers.filter(function(a){return!c._groundLayerIsOperational(a)&&c.verifyWriteLayer(a,b)}).map(function(a){return a.write(null,b)}),0<a.length&&(g.baseMap||(g.baseMap={id:"basemap",title:"Basemap"}),g.baseMap.elevationLayers=a.toArray()))};d.prototype.readClippingArea=function(a){return a&&a.geometry?A.fromJSON(a.geometry):null};
d.prototype.writeClippingArea=function(a,g){a&&(g.clippingArea||(g.clippingArea={}),g.clippingArea.geometry=a.toJSON())};d.prototype.readClippingEnabled=function(a,g){return g.clippingArea?!!g.clippingArea.clip:!1};d.prototype.writeClippingEnabled=function(a,g){this.clippingArea&&(g.clippingArea||(g.clippingArea={}),g.clippingArea.clip=a)};d.prototype.writeLayers=function(a,g,b){var c=this,e=t.mixin({},b,{layerContainerType:"ground"}),d=t.mixin({},b,{layerContainerType:"operational-layers"});b=this.ground.layers.filter(function(a){return c._groundLayerIsOperational(a)&&
c.verifyWriteLayer(a,e)}).map(function(a){return a.write(null,e)});b.addMany(a.filter(function(a){return c.verifyWriteLayer(a,d)}).map(function(a){return a.write(null,d)}));b=b.filter(function(a){return!!a});g.operationalLayers=b.toArray()};d.prototype.verifyWriteLayer=function(a,g){return!a.write?(g&&g.messages.push(new k("layer:unsupported","Layers ("+a.title+", "+a.id+") of type '"+a.declaredClass+"' cannot be persisted in web scenes",{layer:a})),!1):!0};d.prototype.readSourceVersion=function(a,
g){var b=g.version.split("."),c=b[1];return{major:parseInt(b[0],10),minor:parseInt(c,10)}};d.prototype.writeSourceVersion=function(a,g){g.version=y.major+"."+y.minor};Object.defineProperty(d.prototype,"authoringApp",{set:function(a){this._isAuthoringAppSetByUser=!0;this._set("authoringApp",a)},enumerable:!0,configurable:!0});d.prototype.writeAuthoringApp=function(a,g){g.authoringApp=a&&this._isAuthoringAppSetByUser?a:"ArcGIS API for JavaScript"};Object.defineProperty(d.prototype,"authoringAppVersion",
{set:function(a){this._isAuthoringAppVersionSetByUser=!0;this._set("authoringAppVersion",a)},enumerable:!0,configurable:!0});d.prototype.writeAuthoringAppVersion=function(a,g){g.authoringAppVersion=a&&this._isAuthoringAppVersionSetByUser?a:z.version};d.prototype.writePresentation=function(a,g){var b=this,c=a.toJSON();c.slides.forEach(function(a){a.visibleLayers=a.visibleLayers.filter(function(a){var g=b.ground.layers.find(function(g){return g.id===a.id});return!g||b._groundLayerIsOperational(g)})});
g.presentation=c};d.prototype.readInitialViewProperties=function(a,g){var b={};g.initialState&&g.initialState.environment&&(b.environment=M.fromJSON(g.initialState.environment));g.spatialReference&&(b.spatialReference=v.fromJSON(g.spatialReference));b.viewingMode=g.viewingMode||"global";g.initialState&&g.initialState.viewpoint&&(b.viewpoint=C.fromJSON(g.initialState.viewpoint));return new E(b)};d.prototype.writeInitialViewProperties=function(a,g){if(a){var b={};a.environment&&(b.environment=a.environment.toJSON());
a.viewpoint&&(b.viewpoint=a.viewpoint.toJSON());0!==Object.keys(b).length&&(g.initialState=b);g.spatialReference=a.spatialReference?a.spatialReference.toJSON():v.WebMercator.toJSON();g.viewingMode=null!=a.viewingMode?a.viewingMode:"global"}};d.prototype.load=function(){this.addResolvingPromise(this._loadFromSource());return this};d.prototype.toJSON=function(){return this.write(null,{origin:"web-scene"})};d.prototype.read=function(a,b){var c=this;b=t.mixin({},b,{origin:"web-scene"});var e=this._isAuthoringAppVersionSetByUser,
d=this._isAuthoringAppSetByUser,f=arguments;u.readLoadable(this,a,function(b){return c.inherited(f,[a,b])},b);d||(this._isAuthoringAppSetByUser=!1);e||(this._isAuthoringAppVersionSetByUser=!1);if(a.baseMap&&Array.isArray(a.baseMap.elevationLayers)){var h=a.baseMap.elevationLayers.map(function(a){return{id:a.id}});this.presentation.slides.forEach(function(a){a.visibleLayers.addMany(h)})}return this};d.prototype.write=function(a,b){b=t.mixin({},b,{origin:"web-scene"});return this.inherited(arguments,
[a,b])};d.prototype.save=function(a){var b=this;if(!this.portalItem)return N.error("save(): requires the .portalItem property to be set"),c.reject(new k("webscene:portal-item-not-set","Portal item to save to has not been set on the WebScene"));if("Web Scene"!==this.portalItem.type)return c.reject(new k("webscene:portal-item-wrong-type",'Portal item needs to have type "Web Scene"'));var e={origin:"web-scene",url:this.portalItem.itemUrl&&s.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||
F.getDefault(),writtenProperties:[]},d=this.write(null,e);if(a=this._verifySave(e,a))return c.reject(a);this._makeRelativeStyleUrls(d,this.portalItem.itemUrl);this._updateTypeKeywords(this.portalItem);return this.portalItem.update({data:d}).then(function(){w.updateOrigins(e);return c.resolve(b.portalItem)})};d.prototype.saveAs=function(a,b){var e=this;if(!a)return N.error("saveAs(portalItem): requires a portal item parameter"),c.reject(new k("webscene:portal-item-required","saveAs requires a portal item to save to"));
if(a.type&&"Web Scene"!==a.type||a.id)return c.reject(new k("webscene:portal-item-already-exists","WebScene can only saveAs to a new and empty portal item"));var d=a.portal||F.getDefault();if(!d.user)return c.reject(new k("portal:not-signed-in","Not signed in"));if(this.portalItem&&this.containsRelativeStyleUrls())return c.reject(new k("webscene:failed-to-copy-embedded-resources","Copying of embedded resources is currently not supported"));var f={origin:"web-scene",url:null,messages:[],portal:d,writtenProperties:[]},
q=this.write(null,f),h=this._verifySave(f,b);if(h)return c.reject(h);a.type="Web Scene";this._updateTypeKeywords(a);return d.user.addItem({item:a,folder:b&&b.folder,data:q}).then(function(){e.portalItem=a;r.prototype.read.call(e,{version:q.version,authoringApp:q.authoringApp,authoringAppVersion:q.authoringAppVersion},{name:"web-scene",url:a.itemUrl&&s.urlToObject(a.itemUrl)});w.updateOrigins(f);return c.resolve(a)})};d.prototype._verifySave=function(a,b){var c=a.messages.filter(function(a){return"error"===
a.type});b&&b.ignoreUnsupported&&(c=c.filter(function(a){return"layer:unsupported"!==a.name&&"symbol:unsupported"!==a.name}));if(c.length)return new k("webscene:save","Failed to save webscene due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:c})};d.prototype.updateFrom=function(a,b){void 0===b&&(b={});b.environmentExcluded||(this.initialViewProperties.environment=M.prototype.clone.apply(a.environment));b.viewpointExcluded||(this.initialViewProperties.viewpoint=
a.viewpoint.clone());this.initialViewProperties.spatialReference=a.spatialReference.clone();this.initialViewProperties.viewingMode=a.viewingMode;a.clippingArea?a.clippingArea!==this.clippingArea&&(this.clippingArea=a.clippingArea.clone(),this.clippingEnabled=!0):this.clippingEnabled=!1;a.map===this&&a.allLayerViews.forEach(function(a){a.layer.visible=a.visible})};d.prototype.containsRelativeStyleUrls=function(){return this.portalItem&&this.portalItem.id&&this.portalItem.itemUrl?this._makeRelativeStyleUrls(this.toJSON(),
this.portalItem.itemUrl):!1};d.prototype.isDefaultGroundLayer=function(a){var b=I.groundElevationLayers["world-elevation"];return a.id===b.id&&s.normalize(a.url)===s.normalize(b.url)};d.prototype._groundLayerIsOperational=function(a){return"esri.layers.ElevationLayer"!==a.declaredClass||-1===this.basemapElevationLayerIds.indexOf(a.id)&&!this.isDefaultGroundLayer(a)||this.presentation.slides.some(function(b){return!b.visibleLayers.some(function(b){return b.id===a.id})})?!0:!1};d.prototype._loadFromSource=
function(){return this.resourceInfo?this._loadFromJSON(this.resourceInfo,{origin:"web-scene"}):this.portalItem&&this.portalItem.id?this._loadFromItem(this.portalItem):c.resolve(null)};d.prototype._readAndLoadFromJSON=function(a,b){var c=this._validateJSON(a,b&&b.url&&b.url.path);this.read(c,b);return this._loadFromJSON(c,b)};d.prototype._loadFromJSON=function(a,b){var d=this;return this._validateSpatialReference().then(function(){return e.when(l,"./portal/support/layersCreator")}).then(function(e){var f=
[],q=a.operationalLayers,h=[];a.baseMap&&Array.isArray(a.baseMap.elevationLayers)&&(h.push.apply(h,a.baseMap.elevationLayers),d.basemapElevationLayerIds=a.baseMap.elevationLayers.map(function(a){return a.id}));var k=function(a){a.layers&&(a.layers=a.layers.filter(k));return"ArcGISTiledElevationServiceLayer"===a.layerType?(h.push(a),!1):!0};q&&(q=q.filter(k));var l={context:t.mixin({},b,{layerContainerType:"operational-layers"})};d.portalItem&&(l.context.portal=d.portalItem.portal||F.getDefault());
if(0<h.length){var m=t.mixin({},l,{context:t.mixin({},l.context,{layerContainerType:"ground"})});m.defaultLayerType="ArcGISTiledElevationServiceLayer";f.push.apply(f,e.populateOperationalLayers(d.ground.layers,h,m))}q&&0<q.length&&f.push.apply(f,e.populateOperationalLayers(d.layers,q,l));return c.eachAlways(f).then(function(){})})};d.prototype._loadFromItem=function(a){var b=this;return a.load().otherwise(function(a){throw new k("webscene:load-portal-item","Failed to load portal item",{error:a});
}).then(function(){if("Web Scene"!==a.type)throw new k("webscene:invalid-portal-item","Invalid portal item type '${type}', expected 'Web Scene'",{type:a.type});}).then(function(){return a.fetchData()}).then(function(c){b.resourceInfo=c;return b._readAndLoadFromJSON(c,{origin:"web-scene",url:s.urlToObject(a.itemUrl),portal:a.portal||F.getDefault()})})};d.prototype._validateSpatialReference=function(){var a=this.initialViewProperties,b=a.spatialReference||v.WebMercator,d;if("local"!==a.viewingMode){if(!b.isWGS84&&
!b.isWebMercator)return c.reject(new k("webscene:unsupported-spatial-reference","Unsupported spatial reference (${spatialReference.wkid}) in global mode, only Web Mercator or WGS84 GCS are supported",{spatialReference:b,viewingMode:a.viewingMode}));d=function(a){return!a||a.isWGS84||a.isWebMercator}}else{if(null==D.getUnitValue(b))return c.reject(new k("webscene:unsupported-spatial-reference","Unsupported spatial reference (${spatialReference.wkid}) in local mode, only projected coordinate systems are supported",
{spatialReference:b,viewingMode:a.viewingMode}));d=function(a){return!a||a.equals(b)}}var e=function(a){return a&&(a.camera&&a.camera.position&&a.camera.position.spatialReference||a.targetGeometry&&a.targetGeometry.spatialReference)},f=e(a.viewpoint);return f&&!d(f)?c.reject(new k("webscene:incompatible-camera-spatial-reference","Camera spatial reference (${cameraSpatialReference.wkid}) is incompatible with the scene spatial reference (${sceneSpatialReference.wkid})",{cameraSpatialReference:f,sceneSpatialReference:b,
viewingMode:a.viewingMode})):(f=this.presentation.slides.find(function(a){return!d(e(a.viewpoint))}))?(f=e(f.viewpoint),c.reject(new k("webscene:incompatible-slide-spatial-reference","Slide spatial reference (${slideSpatialReference.wkid}) is incompatible with the scene spatial reference (${sceneSpatialReference.wkid})",{slideSpatialReference:f,sceneSpatialReference:b,viewingMode:a.viewingMode}))):c.resolve()};d.prototype._validateVersion=function(a){var b=a.split("."),c=b[0],b=b[1],d=/^\s*\d+\s*$/;
if(!c||!c.match||!c.match(d))throw new k("webscene:invalid-version","Expected major version to be a number, but got '${version}'",{version:a});if(!b||!b.match||!b.match(d))throw new k("webscene:invalid-version","Expected minor version to be a number, but got '${version}'",{version:a});a=parseInt(c,10);d=parseInt(b,10);if(a!==y.major)throw new k("webscene:unsupported-version","Required major webscene version is '"+y.major+"', but got '${version.major}.${version.minor}'",{version:{major:c,minor:b}});
return{major:a,minor:d}};d.prototype._validateJSON=function(a,b){void 0===b&&(b=null);var c=this._sanitizeJSON(a,b),d=this._validateVersion(c.version);c.version=d.major+"."+d.minor;1===d.major&&2>=d.minor&&(c.spatialReference=v.WebMercator.toJSON());return c};d.prototype._sanitizeJSON=function(a,b){void 0===b&&(b=null);var c={version:a.version||"",baseMap:a.baseMap,operationalLayers:a.operationalLayers,authoringApp:a.authoringApp||"",authoringAppVersion:a.authoringAppVersion||"",viewingMode:a.viewingMode||
"global",presentation:a.presentation&&x.sanitizeJSON(a.presentation)||{},initialState:a.initialState,spatialReference:a.spatialReference||v.WebMercator.toJSON(),clippingArea:a.clippingArea};this._makeAbsoluteStyleUrls(c,b);return c};d.prototype._forEachSymbolResourceUrl=function(a,b){if(!Array.isArray(a.operationalLayers))return!1;var c=!1,d=function(a,d){var e=a[d];if(e){var f=b(e);f!==e&&(a[d]=f,c=!0)}},e=function(a,b){a&&a.styleUrl&&d(a,"styleUrl");a&&(a.symbolLayers&&a.symbolLayers.some(function(a){return a.resource&&
a.resource.href&&s.isAbsolute(a.resource.href)}))&&(c=!0)};a.operationalLayers.forEach(function(a){if(a=a.layerDefinition&&a.layerDefinition.drawingInfo&&a.layerDefinition.drawingInfo.renderer)switch(a.type){case "simple":e(a.symbol,b);break;case "uniqueValue":d(a,"styleUrl");e(a.defaultSymbol,b);Array.isArray(a.uniqueValueInfos)&&a.uniqueValueInfos.forEach(function(a){e(a.symbol,b)});break;case "classBreaks":e(a.defaultSymbol,b),Array.isArray(a.classBreakInfos)&&a.classBreakInfos.forEach(function(a){e(a.symbol,
b)})}});return c};d.prototype._makeAbsoluteStyleUrls=function(a,b){return!b?!1:this._forEachSymbolResourceUrl(a,function(a){return s.makeAbsolute(a,b,{preserveProtocolRelative:!0})})};d.prototype._makeRelativeStyleUrls=function(a,b){return!b?!1:this._forEachSymbolResourceUrl(a,function(a){return s.makeRelative(a,b)})};d.prototype._updateTypeKeywords=function(a){"local"===this.initialViewProperties.viewingMode?a.typeKeywords?-1===a.typeKeywords.indexOf("ViewingMode-Local")&&a.typeKeywords.push("ViewingMode-Local"):
a.typeKeywords=["ViewingMode-Local"]:"global"===this.initialViewProperties.viewingMode&&a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter(function(a){return"ViewingMode-Local"!==a}));a.typeKeywords&&(a.typeKeywords=a.typeKeywords.filter(function(a,b,c){return c.indexOf(a)===b}))};d.fromJSON=function(a){return new this({resourceInfo:a})};d.VERSION=y;a([m.property({json:{writeAlways:!0,writeNull:!0}})],d.prototype,"basemap",void 0);a([m.read("basemap",["baseMap"])],d.prototype,"readBasemap",null);
a([m.write("basemap")],d.prototype,"writeBasemap",null);a([m.property({type:K,json:{writeAlways:!0}}),m.cast(J.cast)],d.prototype,"clippingArea",void 0);a([m.read("clippingArea")],d.prototype,"readClippingArea",null);a([m.write("clippingArea")],d.prototype,"writeClippingArea",null);a([m.property({type:Boolean,json:{writeAlways:!0}})],d.prototype,"clippingEnabled",void 0);a([m.read("clippingEnabled",["clippingArea"])],d.prototype,"readClippingEnabled",null);a([m.write("clippingEnabled")],d.prototype,
"writeClippingEnabled",null);a([m.property({json:{writeAlways:!0}})],d.prototype,"layers",void 0);a([m.write("layers")],d.prototype,"writeLayers",null);a([m.property({readOnly:!0,json:{writeAlways:!0,writeNull:!0}})],d.prototype,"sourceVersion",void 0);a([m.read("sourceVersion",["version"])],d.prototype,"readSourceVersion",null);a([m.write("sourceVersion")],d.prototype,"writeSourceVersion",null);a([m.property({type:String,json:{writeAlways:!0,writeNull:!0}})],d.prototype,"authoringApp",null);a([m.write("authoringApp")],
d.prototype,"writeAuthoringApp",null);a([m.property({type:String,json:{writeAlways:!0,writeNull:!0}})],d.prototype,"authoringAppVersion",null);a([m.write("authoringAppVersion")],d.prototype,"writeAuthoringAppVersion",null);a([m.property({type:x,json:{writeAlways:!0}})],d.prototype,"presentation",void 0);a([m.write("presentation")],d.prototype,"writePresentation",null);a([m.property({type:E,json:{writeAlways:!0}})],d.prototype,"initialViewProperties",void 0);a([m.read("initialViewProperties",["initialState.environment",
"spatialReference","viewingMode","initialState.viewpoint"])],d.prototype,"readInitialViewProperties",null);a([m.write("initialViewProperties")],d.prototype,"writeInitialViewProperties",null);a([m.property({type:h})],d.prototype,"portalItem",void 0);a([m.property()],d.prototype,"resourceInfo",void 0);a([f(0,m.cast(h))],d.prototype,"saveAs",null);return d=a([m.subclass("esri.WebScene")],d)}(m.declared(b,G,r))});