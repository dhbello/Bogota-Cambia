// All material copyright ESRI, All Rights Reserved, unless otherwise specified.
// See http://js.arcgis.com/4.1/esri/copyright.txt for details.
//>>built
define("../../../../core/Accessor ../../../../core/watchUtils ../../../../geometry/Point ../../support/mathUtils ../../lib/glMatrix ../../constraints/SceneViewAltitudeConstraint ../../webgl-engine/lib/Camera ../../webgl-engine/lib/IntervalUtilities".split(" "),function(y,m,z,n,t,u,A,v){function B(a){return new d.Tilt({min:function(){return 0.01},max:function(){return n.deg2rad(a.tilt.max)}})}function C(a){return new d.Altitude({min:function(){return a.altitude.min},max:function(){return a.altitude.max}})}
var f=t.vec3d,l=t.mat4d,D=new z,h=f.create(),w=f.create(),p=l.create(),q=f.create(),r=f.create(),s=f.create(),x=new A,k=f.create(),E={tilt:0,distance:0},F={distance:0,maxFarNearRatio:0},d=y.createSubclass([],{declaredClass:"esri.views.3d.navigation.mixins.ConstraintsMixin",properties:{userConstraints:{set:function(a){this._disconnectUserConstraints();this._connectUserConstraints(a);this._set("userConstraints",a)}},elevationProvider:{value:null,set:function(a){null!==this._elevationChangeHandle&&(this._elevationChangeHandle.remove(),
this._elevationChangeHandle=null);null!==this._elevationChangeTileHandle&&(this._elevationChangeTileHandle.remove(),this._elevationChangeTileHandle=null);null!==a&&(this._elevationChangeHandle=a.on("elevation-change",this._elevationChangeHandler.bind(this)),this._elevationChangeTileHandle=a.on("elevation-change-tile",this._elevationChangeTileHandler.bind(this)));this._set("elevationProvider",a)}},minPoiDist:{get:function(){return this._minPoiDistInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},
cameraElevationMargin:{get:function(){return this._cameraElevationMarginInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},minNearDistance:{get:function(){return this._minNearDistanceInMeters/this.renderUnitInMeters},dependsOn:["renderUnitInMeters"]},renderUnitInMeters:{},constraintsEnabled:{value:!0}},constructor:function(){this._userConstraints=null;this._userConstraintsHandles=[];this._clipDistanceHandles=[];this._tiltHandles=[];this._altitudeHandles=[];this.constraints={tilt:this.defaultConstraints.tilt,
altitude:this.defaultConstraints.altitude,collision:this.defaultConstraints.collision};this._tiltModeHandler=this._tiltModeHandler.bind(this);this._tiltMaxHandler=this._tiltMaxHandler.bind(this);this._altitudeModeHandler=this._altitudeModeHandler.bind(this);this._altitudeMinMaxHandler=this._altitudeMinMaxHandler.bind(this);this._clipDistanceModeHandler=this._clipDistanceModeHandler.bind(this);this._clipDistanceNearFarHandler=this._clipDistanceNearFarHandler.bind(this);this._collisionEnabledHandler=
this._collisionEnabledHandler.bind(this);this.enableElevationUpdates=!0;this.updateTargetByElevationUpdates=d.UPDATE_TARGET_BY_ELEVATION_UPDATES_DEFAULT;this._recomputeTargetCenterForElevationChange=!1;this._terrainElevationAtCameraEye=this._terrainElevationBelowCamera=this._elevationChangeTileHandle=this._elevationChangeHandle=null;this._autoAltitudeConstraints={min:u.MIN_DEFAULT,max:u.MAX_DEFAULT};this.maxFarNearRatio=2E4;this._minNearDistanceInMeters=2;this._minPoiDistInMeters=4;this._cameraElevationMarginInMeters=
5},initialize:function(){this._targetCameraBeforeElevationUpdate=this.cameras.current.copy();this._sceneExtentChangeHandle=this.view.watch("dataExtent",function(a){this._dataExtentChanged()}.bind(this))},_dataExtentChanged:function(){this.view.ready&&(this._updateAltitudeConstraintFromExtent(this.view.dataExtent),this._reapplyConstraints(),this._camerasChanged())},_updateAutoAltitudeConstraints:function(a){},updateRenderCoordsHelper:function(a,b){this.inherited(arguments);if(!this._userConstraints||
"auto"===this._userConstraints.altitude.mode)this.constraints.altitude=d.Altitude.scale(this.defaultConstraints.altitude,a.unitInMeters);if(!this._userConstraints||"auto"===this._userConstraints.tilt.mode)this.constraints.tilt=d.Tilt.scale(this.defaultConstraints.tilt,a.unitInMeters);this._updateAltitudeConstraintFromExtent(this.view.dataExtent);this._reapplyConstraints();this._camerasChanged()},_updateAltitudeConstraintFromExtent:function(a){0<a.xmax-a.xmin&&(this._updateAutoAltitudeConstraints(a),
(!this._userConstraints||"auto"===this._userConstraints.altitude.mode)&&this._autoUpdateAltitudeConstraint())},destroy:function(){this._disconnectUserConstraints();this._sceneExtentChangeHandle.remove()},_updateTargetCenterForElevation:function(a){if(a||this.enableElevationUpdates&&this.updateTargetByElevationUpdates)(a=this.getCameraIntersectTerrain(this.cameras.target.eye,this.cameras.target.center,this.cameras.target.up,0.02))&&!a.equals(this.cameras.target)&&this.setCamera(a,{internalUpdate:!0})},
step:function(){if(!(this.pan&&this.pan.continuous&&this.pan.continuous.active||this.pan.active||this.zoom.active||this.rotate.active)&&this._recomputeTargetCenterForElevationChange){var a=this._targetCameraChangedByElevationUpdate;this._updateTargetCenterForElevation();a&&(this._targetCameraChangedByElevationUpdate=!0);this._recomputeTargetCenterForElevationChange=!1}this.inherited(arguments)},applyConstraints:function(a,b){if(!this.constraintsEnabled)return!1;var c=this._cameraElevationAngle(a,
E),g=this.constraints.tilt.min(c.distance),e=this.constraints.tilt.max(c.distance),d=0;!b&&c.tilt>e?d=c.tilt-e:c.tilt<g&&(d=c.tilt-g);c=!1;0.01<Math.abs(d)&&(f.cross(h,a.up,w),l.identity(p),l.rotate(p,d,w),l.multiplyVec3(p,h),f.add(a.center,h,a.eye),l.multiplyVec3(p,a.up),c=!0);f.subtract(a.center,a.eye,q);d=a.distance;g=this.limitAltitude(d,a.center,q,d);d!==g&&(f.scale(q,-g/d),f.add(a.center,q,a.eye),c=!0);this._autoUpdateTiltConstraint(e);return c},limitTiltByConstraints:function(a,b,c,g){if(!this.constraintsEnabled)return a;
var e=this.constraints.tilt.min(c),d=this.constraints.tilt.max(c);if((void 0===g||0<g)&&a>=d)a=d;else if((void 0===g||0>g)&&a<=e)a=e;a=this.limitTiltByAltitudeConstraints(a,b,c,g);this._autoUpdateTiltConstraint(d);return a},_autoUpdateAltitudeConstraint:function(){var a=this._userConstraints&&this._userConstraints.altitude;a&&"auto"===a.mode&&a.autoUpdate(this.constraints.altitude.min(this),this.constraints.altitude.max(this))},_autoUpdateTiltConstraint:function(a){var b=this._userConstraints&&this._userConstraints.tilt;
void 0===a&&(a=this.constraints.tilt.max(this.cameras.target.distance));b&&"auto"===b.mode&&b.autoUpdate(n.rad2deg(a))},_disconnectUserConstraints:function(){if(this._userConstraints){this._userConstraintsHandles.forEach(function(a){a.remove()});this._userConstraints=null;this._userConstraintsHandles.length=0;var a=this.renderUnitInMeters;this.constraints.tilt=d.Tilt.scale(this.defaultConstraints.tilt,a);this.constraints.altitude=d.Altitude.scale(this.defaultConstraints.altitude,a)}},_connectUserConstraints:function(a){a&&
(this._userConstraints=a,this._userConstraintsHandles.push(m.init(a,"tilt.mode",this._tiltModeHandler),m.init(a,"clipDistance.mode",this._clipDistanceModeHandler),m.init(a,"altitude.mode",this._altitudeModeHandler),m.init(a,"collision.enabled",this._collisionEnabledHandler)))},_camerasChanged:function(){this.targetChanged();this.currentChanged();this.currentHasReachedTarget()&&this.currentReachedTarget()},_reapplyConstraints:function(){var a=!1;this.applyConstraints(this.cameras.current)&&(a=!0);
this.applyConstraints(this.cameras.target)&&(a=!0);a&&this._camerasChanged()},_userConstraintsChanged:function(){this._reapplyConstraints()},_altitudeMinMaxHandler:function(a,b,c){this._userConstraintsChanged()},_tiltMaxHandler:function(a,b,c){this._userConstraintsChanged()},_tiltModeHandler:function(a){this._tiltHandles.forEach(function(a){a.remove()});this._tiltHandles.length=0;"auto"===a?this.constraints.tilt=d.Tilt.scale(this.defaultConstraints.tilt,this.renderUnitInMeters):(this._tiltHandles.push(this._userConstraints.watch("tilt.max",
this._tiltMaxHandler)),this.constraints.tilt=B(this._userConstraints));this._tiltMaxHandler()},_altitudeModeHandler:function(a){this._altitudeHandles.forEach(function(a){a.remove()});this._altitudeHandles.length=0;"auto"===a?(this.constraints.altitude=d.Altitude.scale(this.defaultConstraints.altitude,this.renderUnitInMeters),this._autoUpdateAltitudeConstraint()):(this._altitudeHandles.push(this._userConstraints.watch("altitude.min",this._altitudeMinMaxHandler),this._userConstraints.watch("altitude.max",
this._altitudeMinMaxHandler)),this.constraints.altitude=C(this._userConstraints));this._altitudeMinMaxHandler()},_collisionEnabledHandler:function(a,b,c){this.constraints.collision=new d.Collision(this._userConstraints.collision.enabled);this._userConstraintsChanged()},_clipDistanceNearFarHandler:function(a,b,c){"auto"!==this._userConstraints.clipDistance.mode&&(this.cameras.target.near=this._userConstraints.clipDistance.near,this.cameras.target.far=this._userConstraints.clipDistance.far,this.cameras.current.near=
this._userConstraints.clipDistance.near,this.cameras.current.far=this._userConstraints.clipDistance.far);this._camerasChanged()},_clipDistanceModeHandler:function(a){this._clipDistanceHandles.forEach(function(a){a.remove()});this._clipDistanceHandles.length=0;"auto"!==a&&this._clipDistanceHandles.push(this._userConstraints.watch(["clipDistance.near","clipDistance.far"],this._clipDistanceNearFarHandler));this._clipDistanceNearFarHandler()},_updateAutoNearFar:function(a){var b=this._userConstraints&&
this._userConstraints.clipDistance;if(!(b&&"auto"!==b.mode)){var c=this.renderUnitInMeters,g=this.distanceToSilhouette(a,this.view.dataExtent,c,this._getTerrainElevationBelowCamera(a),F);a.far=g.distance/c;a.far/g.maxFarNearRatio>this.minNearDistance?a.near=a.far/g.maxFarNearRatio:(a.near=this.minNearDistance,a.far=a.near*g.maxFarNearRatio);b&&a===this.cameras.current&&b.autoUpdate(a.near,a.far)}},constrainTargetEyeByElevation:function(a){if(!this.elevationProvider||!this.elevationProvider.spatialReference)return!1;
var b=this.cameras.target;a&&this._targetCameraBeforeElevationUpdate.copyFrom(b);return this._applyTargetEyeElevationConstraint(b.eye,this._getTerrainElevationBelowCamera(b))},constrainTargetEyeByElevationAndMoveLookAt:function(){f.set(this.cameras.target.eye,s);this.constrainTargetEyeByElevation()&&(f.subtract(s,this.cameras.target.eye),f.subtract(this.cameras.target.center,s))},targetChanged:function(a){this.inherited(arguments);this._targetCameraChangedByElevationUpdate=!1;this._updateAutoNearFar(this.cameras.target);
this.currentHasReachedTarget()&&this.currentReachedTarget()},currentChanged:function(){this._updateAutoNearFar(this.cameras.current);this.inherited(arguments)},_applyTargetEyeElevationConstraint:function(a,b){if(!this.constraintsEnabled)return!1;var c=this.renderCoordsHelper,g=c.getAltitude(a);return this.constraints.collision.enabled&&g-b<this.cameraElevationMargin?(c.setAltitude(b+this.cameraElevationMargin,a,0),!0):!1},_cameraElevationAngle:function(a,b){b=b||{tilt:0,distance:0};this.renderCoordsHelper.worldUpAtPosition(a.center,
r);f.subtract(a.eye,a.center,h);var c=f.length(h),g=Math.acos(f.dot(h,r)/c/f.length(r));b.tilt=g;b.distance=c;return b},_elevationChangeTileHandler:function(a){if(this.enableElevationUpdates&&this._targetCameraChangedByElevationUpdate&&this.constraintsEnabled){var b=!1,c=a.tile.extent;a=this.renderCoordsHelper.fromRenderCoords(this._targetCameraBeforeElevationUpdate.eye,D,a.spatialReference);c[0]<=a.x&&(c[1]<=a.y&&c[2]>a.x&&c[3]>a.y)&&(x.copyFrom(this.cameras.target),this.cameras.target.copyFrom(this._targetCameraBeforeElevationUpdate),
this.constrainTargetEyeByElevation(),b=!x.equals(this.cameras.target),b=this.applyConstraints(this.cameras.target)||b);b&&(this.targetChanged(),this._targetCameraChangedByElevationUpdate=!0)}},_elevationChangeHandler:function(a){var b=this.renderCoordsHelper,c=this.cameras.target.eye,g=a.extent,e=b.fromRenderCoords(c,a.spatialReference),d=g[0]<=e.x&&g[1]<=e.y&&g[2]>e.x&&g[3]>e.y;d&&(this._terrainElevationAtCameraEye=null);if(this.enableElevationUpdates&&this.constraintsEnabled){var f=!1;d&&(this._targetCameraChangedByElevationUpdate||
this._targetCameraBeforeElevationUpdate.copyFrom(this.cameras.target),f=this._applyTargetEyeElevationConstraint(c,this._getTerrainElevationBelowCamera(this.cameras.target)));f&&(this.targetChanged(),this._targetCameraChangedByElevationUpdate=!0);this._recomputeTargetCenterForElevationChange||(d=b.fromRenderCoords(this.cameras.target.center,a.spatialReference),b=Math.max(d.x,e.x),c=Math.min(d.x,e.x),a=Math.max(d.y,e.y),e=Math.min(d.y,e.y),b=v.intersectIntervals([[c,b]],[[g[0],g[2]]]),g=v.intersectIntervals([[e,
a]],[[g[1],g[3]]]),0<b.length&&0<g.length&&(this._recomputeTargetCenterForElevationChange=!0))}},_getTerrainElevationBelowCamera:function(a){if(!this.elevationProvider||!this.elevationProvider.spatialReference)this._terrainElevationBelowCamera=0;else if(!this._terrainElevationAtCameraEye||!a.eye||!(this._terrainElevationAtCameraEye[0]===a.eye[0]&&this._terrainElevationAtCameraEye[1]===a.eye[1]&&this._terrainElevationAtCameraEye[2]===a.eye[2])){var b=this.renderCoordsHelper.fromRenderCoords(a.eye,
this.elevationProvider.spatialReference);this._terrainElevationBelowCamera=this.elevationProvider.getElevation(b)||0;this._terrainElevationAtCameraEye=a.eye}return this._terrainElevationBelowCamera},getCenterIntersectTerrain:function(a,b,c){c||(c=f.create());f.set(b,c);var d=this.picker.pickAlongRay(a,c);this.picker.pickedIntersectionPoint(d,c)||this.getCenterIntersectManifold(a,b,c)||this.getFallbackCenterAlongViewDirection(a,b,c);return c},getCenterIntersectManifold:function(a,b,c){f.subtract(b,
a,h);return this.intersectManifold(a,h,0,c)},getCameraIntersectTerrain:function(a,b,c,d){var e=this.cameras.current.copy();a&&(e.eye=a);b&&(e.center=b);c&&(e.up=c);this.getCenterIntersectTerrain(e.eye,e.center,k);f.dist2(e.eye,k)<this.minPoiDist&&this.constraintsEnabled&&(a=this.constraints.collision.enabled,f.set(e.viewForward,h),f.scale(h,this.minPoiDist),a?f.subtract(k,h,e.eye):f.add(e.eye,h,k),b=this.renderCoordsHelper,c=b.getAltitude(e.eye),a&&c<this.cameraElevationMargin&&(f.subtract(k,e.eye,
h),b.setAltitude(this.cameraElevationMargin,e.eye),f.add(e.eye,h,k)),e.markViewDirty());0<d?(a=f.dist(e.eye,e.center),f.dist(k,e.center)>a*d&&(e.center=k)):e.center=k;return e}});d.UPDATE_TARGET_BY_ELEVATION_UPDATES_DEFAULT=!0;d.Tilt=function(a){this.min=a.min;this.max=a.max};d.Tilt.scale=function(a,b){return 1===b?a:new d.Tilt({min:function(c){return a.min(c*b)},max:function(c){return a.max(c*b)}})};d.Tilt.prototype.apply=function(a,b){return n.clamp(a,this.min(b),this.max(b))};d.Altitude=function(a){this.min=
a.min;this.max=a.max};d.Altitude.scale=function(a,b){return 1===b?a:new d.Altitude({min:function(c){return a.min(c)/b},max:function(c){return a.max(c)/b}})};d.Altitude.prototype.apply=function(a,b){return n.clamp(b,this.min(a),this.max(a))};d.Collision=function(a){this.enabled=null!=a?a:!0};return d});